`timescale 1ns/1ps
module RoundKeyExpander(
    input clk,
    input phase,                 // 0: Phase 1 (tạo địa chỉ, kích hoạt SubWord), 1: Phase 2 (sử dụng kết quả SubWord)
    input [127:0] prev_key,      // Round key trước đó (128-bit = {W0, W1, W2, W3})
    input [3:0] round_num,       // Số vòng hiện tại (1..10)
    output reg [127:0] new_key   // Round key mới
);
    reg [31:0] W0, W1, W2, W3;
    wire [31:0] rot_out;
    reg [31:0] subword_out;
    reg [31:0] temp;
    reg [31:0] rcon_val;
    
    // Tách các từ từ prev_key
    always @(*) begin
        W0 = prev_key[127:96];
        W1 = prev_key[95:64];
        W2 = prev_key[63:32];
        W3 = prev_key[31:0];
    end

    // Module RotWord
    RotWord rw(.in(W3), .out(rot_out));
    
    // Module SubWord: kết quả xuất ra sau 1 chu kỳ (phase 1)
    // Ta sử dụng một register tạm để lưu kết quả SubWord
    wire [31:0] subword_wire;
    SubWord sw(
        .clk(clk),
        .word_in(rot_out),
        .word_out(subword_wire)
    );
    
    // Chọn giá trị Rcon dựa vào round_num
    always @(*) begin
        case(round_num)
            4'd1: rcon_val = {8'h01, 24'b0};
            4'd2: rcon_val = {8'h02, 24'b0};
            4'd3: rcon_val = {8'h04, 24'b0};
            4'd4: rcon_val = {8'h08, 24'b0};
            4'd5: rcon_val = {8'h10, 24'b0};
            4'd6: rcon_val = {8'h20, 24'b0};
            4'd7: rcon_val = {8'h40, 24'b0};
            4'd8: rcon_val = {8'h80, 24'b0};
            4'd9: rcon_val = {8'h1B, 24'b0};
            4'd10: rcon_val = {8'h36, 24'b0};
            default: rcon_val = 32'b0;
        endcase
    end

    // Quá trình mở rộng khóa: chia làm 2 phase
    // Phase 1: chỉ kích hoạt SubWord (sau đó subword_wire được cập nhật sau 1 chu kỳ)
    // Phase 2: tính temp và các từ mới
    always @(posedge clk) begin
        if(phase) begin
            // Giả sử subword_wire đã ổn định (kết quả SubWord)
            subword_out <= subword_wire;
            temp <= W0 ^ subword_wire ^ rcon_val;  // Tính từ đầu tiên của round key mới
            new_key <= { temp,               // W4
                         W1 ^ temp,         // W5
                         W2 ^ (W1 ^ temp),  // W6
                         W3 ^ (W2 ^ (W1 ^ temp)) // W7
                       };
        end
    end
endmodule
